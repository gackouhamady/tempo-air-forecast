name: CI

on:
  push:
    branches:
      - second        # run CI when pushing to your branch named "second"
    paths:
      - "**/*.py"
      - "pyproject.toml"
      - "requirements*.txt"
      - ".github/workflows/ci.yml"
      - "docker/**"
      - "Makefile"
  pull_request:
    branches:
      - main          # run CI when creating/updating a PR into main
    paths:
      - "**/*.py"
      - "pyproject.toml"
      - "requirements*.txt"
      - ".github/workflows/ci.yml"
      - "docker/**"
      - "Makefile"
  workflow_dispatch: {}   # allow manual runs from the Actions tab

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    name: Lint & Tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]  # Add more versions if needed, e.g. ["3.10", "3.11", "3.12"]

    env:
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      PYTHONUTF8: "1"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
            pyproject.toml

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          pip install pytest pytest-cov black ruff

      - name: Lint code (ruff + black)
        run: |
          ruff src
          black --check src

      - name: Run tests with coverage
        run: |
          pytest -q --maxfail=1 \
            --cov=src --cov-report=term-missing --cov-report=xml \
            --junitxml=pytest-report.xml

      - name: Upload test artifacts (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts-${{ matrix.python-version }}
          path: |
            pytest-report.xml
            coverage.xml
          if-no-files-found: ignore
